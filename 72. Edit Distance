class Solution {
public:
    int solve(int i,int j,string s,string p,vector<vector<int>> &dp)
    {
        if(i<0 && j<0)
            return 0;
        if(i<0 && j>=0)
            return j+1;
        if(i>=0 && j<0)
            return i+1;
        if(dp[i][j]!=-1)
            return dp[i][j];
        if(s[i]==p[j])
            return dp[i][j]=solve(i-1,j-1,s,p,dp);
        int ins=0,upd=0,del=0;
        ins=1+solve(i,j-1,s,p,dp);
        del=1+solve(i-1,j,s,p,dp);
        upd=1+solve(i-1,j-1,s,p,dp);
        return dp[i][j]=min(ins,(min(del,upd)));
    }
    int minDistance(string word1, string word2) {
        int n=word1.size(),m=word2.size();
        vector<vector<int>> dp(n,vector<int>(m,-1));
        return solve(n-1,m-1,word1,word2,dp);
    }
};
