class Solution {
public:
    void count(int i,int j,int n,int m,vector<vector<int>> &grid)
    {
        
        if(i==n || j==m || i<0 || j<0 )
             return;
        
            
       
        grid[i][j]=-1;
        if((i+1)<n && grid[i+1][j]==1)
        {
           
            count(i+1,j,n,m,grid);
        }
         if((j+1)<m && grid[i][j+1]==1)
        {
            
            count(i,j+1,n,m,grid);
        }
         if((i-1)>=0 && grid[i-1][j]==1)
        {
            
            count(i-1,j,n,m,grid);
        }
         if((j-1)>=0 && grid[i][j-1]==1)
        {
            
            count(i,j-1,n,m,grid);
        }
        
    }
    int numEnclaves(vector<vector<int>>& grid) {
        int c=0;
        int n=grid.size();
        int m=grid[0].size();
        for(int i=0;i<n;i++)
        {
            
            if(grid[i][0]==1)
                count(i,0,n,m,grid);
                
            if(grid[i][m-1]==1)
                count(i,m-1,n,m,grid);
            
        }
         for(int i=0;i<m;i++)
        {
            
                if(grid[0][i]==1 )
                {
                    count(0,i,n,m,grid);
                }
             if(grid[n-1][i]==1)
                 count(n-1,i,n,m,grid);
            
        }
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                
                if(grid[i][j]==1)
                    c++;
            }
            
        }
        return c;
    }
};
