class Solution {
public:
    int findfirst(int n,vector<int> nums)
    {
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]==n)
            return i;
        }
        return -1;
    }
    int findlast(int n,vector<int> &nums)
    {
        int index=0;
        for(int i=0;i<nums.size();i++)
        {
            if(nums[i]==n)
            index=i;
        }
        return index;
    }
    int findShortestSubArray(vector<int>& nums) {
        unordered_map<int,int> m;
        int maxi=0;
        vector<int> v;
        for(int i=0;i<nums.size();i++){
            m[nums[i]]++;
            maxi=max(maxi,m[nums[i]]);
        }
        for(auto it:m)
        {
            if(it.second==maxi)
            v.push_back(it.first);
        }
        int ans=INT_MAX;
        for(int i=0;i<v.size();i++)
        {
            ans=min(ans,findlast(v[i],nums)-findfirst(v[i],nums)+1);
        }
        return ans;
    }
};
