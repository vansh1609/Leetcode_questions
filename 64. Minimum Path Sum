class Solution {
public:
    int solve(int i,int j,int n,int m,vector<vector<int>> &grid,vector<vector<int>> &v)
    {
        if(i==0 && j==0)
            return grid[0][0];
        if(v[i][j]!=-1)return v[i][j];
        int up=INT_MAX;
        int left=INT_MAX;
        if((i-1)>=0) up=grid[i][j]+solve(i-1,j,n,m,grid,v);
        if((j-1)>=0) left=grid[i][j]+solve(i,j-1,n,m,grid,v);
        return v[i][j]=min(up,left);
    }
    int minPathSum(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        vector<vector<int>> v(n,vector<int>(m,-1));
        return solve(n-1,m-1,n,m,grid,v);
    }
};
